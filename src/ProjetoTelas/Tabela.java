/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProjetoTelas;

import br.com.parg.viacep.ViaCep;
import br.com.parg.viacep.ViaCepException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import javax.swing.table.DefaultTableModel;
import ProjetoDao.CadastroDaoProjeto;
import ProjetoDao.UsuarioDaoProjeto;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import modelo.Cadastro;
import modelo.Sexualidade;
import ProjetoDao.SexualidadeDaoProjeto;

/**
 *
 * @author xtremebass
 */
public class Tabela extends javax.swing.JFrame {

    /**
     * Creates new form Tela1
     */
    public Tabela() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        menuBar1 = new java.awt.MenuBar();
        Arquivo = new java.awt.Menu();
        Editar = new java.awt.Menu();
        jPanel1 = new javax.swing.JPanel();
        jvId = new javax.swing.JTextField();
        jvNome = new javax.swing.JTextField();
        jbCadastrar = new javax.swing.JButton();
        jbRemover = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jvCpf = new javax.swing.JFormattedTextField();
        jcSexo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtEmail = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnCadmultiplos1 = new java.awt.Button();
        btnCadmultiplosThread = new java.awt.Button();
        pgProgresso = new javax.swing.JProgressBar();
        jLabel8 = new javax.swing.JLabel();
        jfCep = new javax.swing.JFormattedTextField();
        txtBairro = new javax.swing.JTextField();
        txtRua = new javax.swing.JTextField();
        txtUf = new javax.swing.JTextField();
        txtCidade = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tb01 = new javax.swing.JTable();

        jMenu1.setText("Menu");

        Arquivo.setLabel("File");
        Arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArquivoActionPerformed(evt);
            }
        });
        menuBar1.add(Arquivo);

        Editar.setLabel("Edit");
        menuBar1.add(Editar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Primeira Tela");
        setBackground(new java.awt.Color(153, 204, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 222, 159));

        jvId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jvIdKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jvIdKeyTyped(evt);
            }
        });

        jvNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jvNomeKeyPressed(evt);
            }
        });

        jbCadastrar.setBackground(new java.awt.Color(255, 204, 153));
        jbCadastrar.setForeground(new java.awt.Color(153, 0, 0));
        jbCadastrar.setText("Cadastrar");
        jbCadastrar.setName("JbpCadastrar"); // NOI18N
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbRemover.setBackground(new java.awt.Color(255, 204, 153));
        jbRemover.setForeground(new java.awt.Color(153, 0, 0));
        jbRemover.setText("Remover");
        jbRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverActionPerformed(evt);
            }
        });

        jbAlterar.setBackground(new java.awt.Color(255, 204, 153));
        jbAlterar.setForeground(new java.awt.Color(153, 0, 0));
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("ID");

        jLabel3.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Nome");

        jLabel4.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("CPF");

        try {
            jvCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jvCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jvCpfKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jvCpfKeyTyped(evt);
            }
        });

        jcSexo.setBackground(new java.awt.Color(40, 40, 40));
        jcSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Feminino", "Outros" }));
        jcSexo.setSelectedIndex(-1);
        jcSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcSexoKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Sexo");

        jLabel6.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("E-Mail");

        jtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtEmailFocusLost(evt);
            }
        });
        jtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEmailKeyPressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 204, 153));
        jButton1.setForeground(new java.awt.Color(153, 0, 0));
        jButton1.setText("Teste Mysql");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Buscar Nome");

        btnCadmultiplos1.setForeground(new java.awt.Color(153, 0, 0));
        btnCadmultiplos1.setLabel("Cad Multiplos");
        btnCadmultiplos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadmultiplos1ActionPerformed(evt);
            }
        });

        btnCadmultiplosThread.setForeground(new java.awt.Color(153, 0, 0));
        btnCadmultiplosThread.setLabel("Cad Multiplos Thread");
        btnCadmultiplosThread.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadmultiplosThreadActionPerformed(evt);
            }
        });

        pgProgresso.setForeground(new java.awt.Color(153, 0, 0));
        pgProgresso.setStringPainted(true);

        jLabel8.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 0));
        jLabel8.setText("CEP");

        try {
            jfCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jfCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jfCepKeyPressed(evt);
            }
        });

        txtBairro.setForeground(new java.awt.Color(0, 153, 153));
        txtBairro.setEnabled(false);

        txtRua.setForeground(new java.awt.Color(0, 153, 153));
        txtRua.setEnabled(false);

        txtUf.setForeground(new java.awt.Color(0, 153, 153));
        txtUf.setEnabled(false);

        txtCidade.setForeground(new java.awt.Color(0, 153, 153));
        txtCidade.setEnabled(false);

        jLabel9.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 0));
        jLabel9.setText("Bairro");

        jLabel10.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 0));
        jLabel10.setText("Rua");

        jLabel11.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 0));
        jLabel11.setText("Estado");

        jLabel12.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 0, 0));
        jLabel12.setText("Cidade");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jLabel11)
                                .addGap(55, 55, 55)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addContainerGap(118, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jvId, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel3)
                                                    .addComponent(jvNome, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel4)
                                                .addGap(127, 127, 127)
                                                .addComponent(jLabel5)
                                                .addGap(92, 92, 92)
                                                .addComponent(jLabel6))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jvCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(12, 12, 12)
                                                .addComponent(jcSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jfCep, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel9))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btnCadmultiplos1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                            .addComponent(jbCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(btnCadmultiplosThread, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(202, 202, 202))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jbRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(119, 119, 119)
                                    .addComponent(txtUf, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 521, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(0, 116, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pgProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jvCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jvId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jvNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4))
                        .addGap(12, 12, 12)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jfCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jbCadastrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAlterar)
                            .addComponent(jbRemover))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadmultiplos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadmultiplosThread, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addComponent(pgProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Tb01.setBackground(new java.awt.Color(179, 108, 66));
        Tb01.setForeground(new java.awt.Color(255, 222, 159));
        Tb01.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "CPF", "Sexo", "E-Mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tb01.setGridColor(new java.awt.Color(0, 153, 255));
        Tb01.setShowGrid(false);
        Tb01.setShowHorizontalLines(true);
        Tb01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tb01MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tb01);
        if (Tb01.getColumnModel().getColumnCount() > 0) {
            Tb01.getColumnModel().getColumn(0).setMinWidth(60);
            Tb01.getColumnModel().getColumn(0).setPreferredWidth(60);
            Tb01.getColumnModel().getColumn(0).setMaxWidth(60);
            Tb01.getColumnModel().getColumn(1).setMinWidth(400);
            Tb01.getColumnModel().getColumn(1).setPreferredWidth(450);
            Tb01.getColumnModel().getColumn(1).setMaxWidth(450);
            Tb01.getColumnModel().getColumn(2).setMinWidth(100);
            Tb01.getColumnModel().getColumn(2).setPreferredWidth(150);
            Tb01.getColumnModel().getColumn(2).setMaxWidth(100);
            Tb01.getColumnModel().getColumn(3).setMinWidth(100);
            Tb01.getColumnModel().getColumn(3).setPreferredWidth(150);
            Tb01.getColumnModel().getColumn(3).setMaxWidth(100);
            Tb01.getColumnModel().getColumn(4).setPreferredWidth(150);
            Tb01.getColumnModel().getColumn(4).setMaxWidth(290);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   // EVENTO DISPARADO AO CLICAR NO BOTÃO CADASTRAR
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        // TODO add your handling code here:
       if((jvId.getText().trim().isEmpty()) 
               || (jvNome.getText().trim().isEmpty()) 
               || (jvCpf.getText().trim().isEmpty()) 
               || (jcSexo.getSelectedIndex() < 0) 
               || (jtEmail.getText().trim().isEmpty())){
           JOptionPane.showMessageDialog(null, "Dados Inválidos");
           jvId.requestFocus();
       }else{
           /*DefaultTableModel tbcadastro = (DefaultTableModel) Tb01.getModel();
           Object [] dados = {jvId.getText(), jvNome.getText(), jvCpf.getText(), jcSexo.getSelectedItem().toString(), jtEmail.getText()};
           tbcadastro.addRow(dados);*/
        try
        {    
          Cadastro cadastro =  new Cadastro(); 
          cadastro.setIdCad(Integer.parseInt(jvId.getText()));
          cadastro.setNomeCad(jvNome.getText());
          cadastro.setCpf(jvCpf.getText());
          //cadastro.setIdSexo(jcSexo.getSelectedIndex());
          cadastro.SetNomeSexo(jcSexo.getSelectedItem().toString());
          cadastro.setEmail(jtEmail.getText());
          
          CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
          cadastroDao.inserir(cadastro); 
           limparCampos();
           jvId.requestFocus();
           atualizaTabela(cadastroDao);
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
        }    

       }    
        
    }//GEN-LAST:event_jbCadastrarActionPerformed
    // EVENTO DISPARADO AO CLICAR NO BOTÃO REMOVER
    private void jbRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverActionPerformed
        // TODO add your handling code here:
    /*    if(Tb01.getSelectedRow() != -1){
           DefaultTableModel tbcadastro = (DefaultTableModel) Tb01.getModel();
           tbcadastro.removeRow((Tb01.getSelectedRow()));  
        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Cadastro para excluir!");
        }*/
    
        try
        {
            int linhaSelecionada = Tb01.getSelectedRow(); //resgata o número da linha selecionada na tabela

            if(linhaSelecionada == -1)
            {
                JOptionPane.showMessageDialog(null, "Selecione um Cadastro para remoção!", "ATENÇÃO!", WARNING_MESSAGE);
            }
            else
            {
                //resgata o conteúdo da primeira coluna da linha selecioanda
                this.jvId.setText(Tb01.getValueAt(linhaSelecionada, 0).toString());
                
                //pergunda de confirmação antes de excluir o registro
                int opcao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja remover?");
                
                //se for igual a 0 siginifica que clicou em SIM
                if(opcao == 0)
                {
                    CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto(); 
                    //chama o metodo excuirID passando o identificador do registro selecionado anteriormente
                    cadastroDao.excluirID(Integer.parseInt(this.jvId.getText()));

                    atualizaTabela(cadastroDao);
                }
             }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
        }    
    
    }//GEN-LAST:event_jbRemoverActionPerformed
    //EVENTO DISPARADO AO CLICAR NO NA TABELA, COLOCA OS CAMPOS DA TABELA NOS EDITS E POSICIONA O PONTEIRO PARA SER ALTERADO CASO CLIQUE NO BOTÃO ALTERAR
    private void Tb01MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tb01MouseClicked
        // TODO add your handling code here:
        if(Tb01.getSelectedRow() != -1){
           jvId.setText(Tb01.getValueAt(Tb01.getSelectedRow(),0).toString());
           jvNome.setText(Tb01.getValueAt(Tb01.getSelectedRow(),1).toString());
           jvCpf.setText(Tb01.getValueAt(Tb01.getSelectedRow(),2).toString());
           jcSexo.setSelectedItem(Tb01.getValueAt(Tb01.getSelectedRow(),3).toString());
           jtEmail.setText(Tb01.getValueAt(Tb01.getSelectedRow(), 4).toString());
           
        }        
    }//GEN-LAST:event_Tb01MouseClicked
   // DISPARA O EVENTO QUANDO CLICADO EM ALTERAR
    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        if(Tb01.getSelectedRow() != -1){
          /* Tb01.setValueAt(jvId.getText(), Tb01.getSelectedRow(), 0);
           Tb01.setValueAt(jvNome.getText(), Tb01.getSelectedRow(), 1);
           Tb01.setValueAt(jvCpf.getText(), Tb01.getSelectedRow(), 2);
           Tb01.setValueAt(jcSexo.getSelectedItem().toString(), Tb01.getSelectedRow(), 3);
           Tb01.setValueAt(jtEmail.getText(), Tb01.getSelectedRow(), 4);*/
          Cadastro cadastro = new Cadastro();
          cadastro.setIdCad(Integer.parseInt(jvId.getText()));
          cadastro.setNomeCad(jvNome.getText());
          cadastro.setCpf(jvCpf.getText());
//          cadastro.setIdSexo(jcSexo.getSelectedIndex()); 
          cadastro.SetNomeSexo(jcSexo.getSelectedItem().toString());
          cadastro.setEmail(jtEmail.getText());
          
          CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
          cadastroDao.alterar(cadastro);
          atualizaTabela(cadastroDao);
          JOptionPane.showMessageDialog(null, "Cadastro alterado com sucesso!", "", INFORMATION_MESSAGE);
         
          limparCampos();

          jvId.requestFocus();
          SexualidadeDaoProjeto sexualidadeDao = new SexualidadeDaoProjeto();
          atualizaSexualidade(sexualidadeDao);

        }else{
            JOptionPane.showMessageDialog(null, "Selecione um Cadastro para Alterar!");
        } 
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void ArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArquivoActionPerformed

    private void jvIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jvIdKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit((c))){
            evt.consume();
        }  
    }//GEN-LAST:event_jvIdKeyTyped

    private void jvCpfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jvCpfKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(!Character.isDigit((c))){
            evt.consume();
        }    
    }//GEN-LAST:event_jvCpfKeyTyped

    private void jvIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jvIdKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            jvNome.requestFocus();
        }
    }//GEN-LAST:event_jvIdKeyPressed

    private void jvNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jvNomeKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            jvCpf.requestFocus();
        }

    }//GEN-LAST:event_jvNomeKeyPressed

    private void jvCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jvCpfKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            jcSexo.requestFocus();
        }

    }//GEN-LAST:event_jvCpfKeyPressed

    private void jcSexoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcSexoKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            jtEmail.requestFocus();
        }

    }//GEN-LAST:event_jcSexoKeyPressed

    private void jtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtEmailFocusLost
        // TODO add your handling code here:
         if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jtEmail.getText()))) 
          {
            JOptionPane.showMessageDialog(null, "Por favor, digite um e-mail válido", "Error", JOptionPane.ERROR_MESSAGE);
            jtEmail.requestFocus();
          }
        
    }//GEN-LAST:event_jtEmailFocusLost

    private void jtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEmailKeyPressed
        // TODO add your handling code here:
        if(evt.getExtendedKeyCode() == evt.VK_ENTER){
            jbCadastrar.requestFocus();
        }        
    }//GEN-LAST:event_jtEmailKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
           new ProjetoDao.ConexaoBancoProjeto().Conectar();
           JOptionPane.showMessageDialog(null, "Banco de dados conectado");
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
        atualizaTabela(cadastroDao);
        SexualidadeDaoProjeto sexualidadeDao = new SexualidadeDaoProjeto();
        atualizaSexualidade(sexualidadeDao);
    }//GEN-LAST:event_formWindowOpened

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
        CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();        
        buscarNome(cadastroDao);
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void btnCadmultiplos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadmultiplos1ActionPerformed
        CadastrarMultiplos();
        CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
        atualizaTabela(cadastroDao);      
             
    }//GEN-LAST:event_btnCadmultiplos1ActionPerformed

    private void btnCadmultiplosThreadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadmultiplosThreadActionPerformed
        CadastrarMultiplosThread();

    }//GEN-LAST:event_btnCadmultiplosThreadActionPerformed

    private void jfCepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfCepKeyPressed
        
       if(evt.getExtendedKeyCode() == evt.VK_ENTER){
          ViaCep viaCep = new ViaCep();
          
          try {
              viaCep.buscar(jfCep.getText());
              txtBairro.setText(viaCep.getBairro());
              txtRua.setText(viaCep.getLogradouro());
              txtUf.setText(viaCep.getUf());
              txtCidade.setText(viaCep.getLocalidade());
              
          } catch (ViaCepException ex) {
              JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
          }
              
        }         
        
        
    }//GEN-LAST:event_jfCepKeyPressed

    private void CadastrarMultiplosThread()
    {
        int max = 1000;
        new Thread(){
           @Override public void run(){
                
                for (int i = 0; i<= max ; i++)
                {
                    try
                    {    
                      Cadastro cadastro =  new Cadastro(); 
                      cadastro.setNomeCad("Testando Threads");
                      cadastro.setCpf("000.000.000-00");
                      //cadastro.setIdSexo(jcSexo.getSelectedIndex());
                      cadastro.SetNomeSexo("Masculino");
                      cadastro.setEmail("testando@teste.com");

                      CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
                      cadastroDao.inserir(cadastro); 
                      pgProgresso.setValue((i/10));
                    }
                    catch(Exception ex)
                    {
                        JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
                        Thread.interrupted();
                    }    
                }; 
            }           
        }.start();
       

    }        

    
    private void CadastrarMultiplos()
    {
        int i = 0;
        do{
            try
            {    
              Cadastro cadastro =  new Cadastro(); 
              cadastro.setNomeCad("Testando não Threads");
              cadastro.setCpf("000.000.000-00");
              //cadastro.setIdSexo(jcSexo.getSelectedIndex());
              cadastro.SetNomeSexo("Masculino");
              cadastro.setEmail("testando@teste.com");

              CadastroDaoProjeto cadastroDao = new CadastroDaoProjeto();
              cadastroDao.inserir(cadastro); 
              i++;
              pgProgresso.setValue((i/10));
            }
            catch(Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
            }    
        }while(i < 1000); 
        
    }        
    
    private void limparCampos()
    {
        //limpando todos os campos textos
        this.jvId.setText("");
        this.jvNome.setText("");
        this.jvCpf.setText(null);
        this.jcSexo.setSelectedIndex(-1);
        this.jtEmail.setText(null);

    }
    private void atualizaTabela(CadastroDaoProjeto cadastroDao)
    {
        new Thread(){
           @Override public void run(){

                try
                {


                    limparTabela();

                    ArrayList<Cadastro> listaCadastros;
                    listaCadastros = cadastroDao.consultar(); //consulta todos os registros da tabela Escola

                    //Resgata o modelo da tabela            
                    DefaultTableModel modeloTabela = (DefaultTableModel) Tb01.getModel();

                    for(Cadastro cadastro : listaCadastros)
                    {
                        //adiciona em cada linha da tabela da tela o conteúdo de cada posição da listaEscolas
                        modeloTabela.addRow(new String[]{Integer.toString(cadastro.getIdCad()), 
                                                                          cadastro.getNomeCad(), 
                                                                          cadastro.getCpf(), 
                                                                          cadastro.getNomeSexo(),
                                                                          cadastro.getEmail()});
                    }

                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
                }
           }
        }.start();   
    }
 

    private void buscarNome(CadastroDaoProjeto cadastroDao)
    {
        try
        {
            
            limparTabela();
            
            ArrayList<Cadastro> listaCadastrosStr;
            listaCadastrosStr = cadastroDao.consultar(this.txtBuscar.getText().trim()); 

            //Resgata o modelo da tabela            
            DefaultTableModel modeloTabela = (DefaultTableModel) Tb01.getModel();

            for(Cadastro cadastro : listaCadastrosStr)
            {
                //adiciona em cada linha da tabela da tela o conteúdo de cada posição da listaCadastro
                modeloTabela.addRow(new String[]{Integer.toString(cadastro.getIdCad()), 
                                                                  cadastro.getNomeCad(), 
                                                                  cadastro.getCpf(), 
                                                                  cadastro.getNomeSexo(),
                                                                  cadastro.getEmail()});
            }
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
        }
    }
 
    private void limparTabela()
    {
        //percorre a tabela e exclui todas as linhas
        while(Tb01.getRowCount() > 0) 
        {
            DefaultTableModel dm = (DefaultTableModel) Tb01.getModel();
            dm.getDataVector().removeAllElements();
        }
    }

    private void atualizaSexualidade(SexualidadeDaoProjeto sexualidadeDao)
    {
        new Thread(){
           @Override public void run(){

                try
                {
                    limparCbxSexo();
                    ArrayList<Sexualidade> listarSexualidade;
                    listarSexualidade = sexualidadeDao.consultar(); //consulta todos os registros da tabela Escola

                    for(Sexualidade sexualidade : listarSexualidade)
                    {
                        //adiciona em cada linha da tabela da tela o conteúdo de cada posição da listaEscolas
                        jcSexo.addItem(sexualidade.getNomeSexo());
                    }
                    jcSexo.setSelectedIndex(-1);
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro inesperado:\n" + ex.getMessage(), "ERRO!", ERROR_MESSAGE);
                }
           }
        }.start();;
    }
    private void limparCbxSexo()
    {
     //  if(!(jcSexo.get().trim().isEmpty())){ 
          jcSexo.removeAllItems();
      // }
       
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tabela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tabela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Menu Arquivo;
    private java.awt.Menu Editar;
    private javax.swing.JTable Tb01;
    private java.awt.Button btnCadmultiplos1;
    private java.awt.Button btnCadmultiplosThread;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbRemover;
    private javax.swing.JComboBox<String> jcSexo;
    private javax.swing.JFormattedTextField jfCep;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JFormattedTextField jvCpf;
    private javax.swing.JTextField jvId;
    private javax.swing.JTextField jvNome;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JProgressBar pgProgresso;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtUf;
    // End of variables declaration//GEN-END:variables
}
